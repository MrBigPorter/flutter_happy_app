// Prisma Schema for Lottery E-commerce System
// Database: PostgreSQL
// Generated: 2025-01-21

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ============================================
// 用户体系 - User System
// ============================================

/// 用户表 - 存储用户基本信息 ✅已完成 大半
model User {
  id        BigInt   @id @default(autoincrement()) @map("id") /// 用户ID（雪花ID - 使用PostgreSQL BIGSERIAL）
  createdAt DateTime @default(now()) @map("created_at") /// 创建时间
  updatedAt DateTime @updatedAt @map("updated_at") /// 更新时间

  // 基本信息
  nickname  String?  @map("nickname") @db.VarChar(100) /// 昵称
  avatar    String?  @map("avatar") @db.VarChar(255) /// 头像URL
  phone     String   @map("phone") @db.VarChar(20) /// 手机号
  phoneMd5  String   @map("phone_md5") @db.VarChar(32) /// 手机号MD5
  inviteCode String  @unique @map("invite_code") @db.VarChar(20) /// 邀请码

  // VIP与认证
  vipLevel            Int      @default(0) @map("vip_level") @db.SmallInt /// VIP等级
  kycStatus           Int      @default(0) @map("kyc_status") @db.SmallInt /// KYC状态: 0-未认证 1-审核中 2-审核失败 3-待补充 4-已认证
  deliveryAddressId   BigInt?  @map("delivery_address_id") /// 默认收货地址ID
  selfExclusionExpireAt BigInt? @map("self_exclusion_expire_at") /// 自我排除过期时间戳
  lastLoginAt         BigInt?  @map("last_login_at") /// 最后登录时间戳

  // 关系
  wallet              UserWallet? /// 钱包（1对1）
  addresses           UserAddress[] /// 地址列表（1对多）
  kycRecords          KycRecord[] /// KYC认证记录（1对多）
  invitations         UserInvitation[] @relation("Inviter") /// 我邀请的用户（1对多）
  invitedBy           UserInvitation[] @relation("Invitee") /// 邀请我的记录（1对多）
  loginLogs           UserLoginLog[] /// 登录日志（1对多）
  oauthAccounts       OauthAccount[] /// 第三方账户（1对多）
  orders              Order[] /// 订单（1对多）
  winningRecords      WinningRecord[] /// 中奖记录（1对多）
  userCoupons         UserCoupon[] /// 优惠券（1对多）
  rechargeOrders      RechargeOrder[] /// 充值订单（1对多）
  withdrawOrders      WithdrawOrder[] /// 提现订单（1对多）
  bankCards           BankCard[] /// 银行卡（1对多）
  customerServiceSessions CustomerServiceSession[] /// 客服会话（1对多）
  userActivityRecords UserActivityRecord[] /// 活动记录（1对多）
  userNotifications   UserNotification[] /// 通知记录（1对多）
  signInRecords       SignInRecord[] /// 签到记录（1对多）
  workOrders          WorkOrder[] /// 工单（1对多）
  receivePaymentMethods ReceivePaymentMethod[] /// 收款方式（1对多）

  @@index([phone], map: "idx_user_phone")
  @@index([inviteCode], map: "idx_user_invite_code")
  @@index([kycStatus], map: "idx_user_kyc_status")
  @@map("users")
}

/// 用户钱包余额表 - 存储用户的现金和金币余额
model UserWallet {
  id      BigInt   @id @default(autoincrement()) @map("id")
  userId  BigInt   @unique @map("user_id") /// 用户ID（唯一）
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // 余额
  realBalance   Decimal @default(0) @map("real_balance") @db.Decimal(10, 2) /// 现金余额（PHP）
  coinBalance   Decimal @default(0) @map("coin_balance") @db.Decimal(10, 2) /// 金币余额
  frozenBalance Decimal @default(0) @map("frozen_balance") @db.Decimal(10, 2) /// 冻结金额
  totalRecharge Decimal @default(0) @map("total_recharge") @db.Decimal(10, 2) /// 累计充值
  totalWithdraw Decimal @default(0) @map("total_withdraw") @db.Decimal(10, 2) /// 累计提现

  // 关系
  user         User @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions WalletTransaction[] /// 交易流水（1对多）

  @@index([userId], map: "idx_wallet_user")
  @@map("user_wallets")
}

/// 钱包交易流水表 - 记录所有钱包交易明细
model WalletTransaction {
  id            BigInt   @id @default(autoincrement()) @map("transaction_id")
  transactionNo String   @unique @map("transaction_no") @db.VarChar(50) /// 交易流水号
  userId        BigInt   @map("user_id")
  createdAt     DateTime @default(now()) @map("created_at")

  // 交易信息
  transactionType Int     @map("transaction_type") @db.SmallInt /// 交易类型: 1-充值 2-消费 3-退款 4-奖励 5-提现 6-金币兑换 7-邀请奖励
  amount          Decimal @map("amount") @db.Decimal(10, 2) /// 交易金额（正数为收入，负数为支出）
  balanceType     Int     @map("balance_type") @db.SmallInt /// 余额类型: 1-现金 2-金币

  // 余额快照
  beforeBalance Decimal @map("before_balance") @db.Decimal(10, 2) /// 交易前余额
  afterBalance  Decimal @map("after_balance") @db.Decimal(10, 2) /// 交易后余额

  // 关联信息
  relatedId   BigInt? @map("related_id") /// 关联业务ID
  relatedType String? @map("related_type") @db.VarChar(50) /// 关联业务类型

  // 描述
  description String? @map("description") @db.VarChar(500) /// 交易描述
  remark      String? @map("remark") @db.Text /// 备注

  // 状态
  status Int @default(1) @map("status") @db.SmallInt /// 状态: 1-成功 2-失败 3-处理中

  // 关系
  wallet UserWallet @relation(fields: [userId], references: [userId], onDelete: Cascade)

  @@index([userId], map: "idx_transaction_user")
  @@index([transactionNo], map: "idx_transaction_no")
  @@index([transactionType], map: "idx_transaction_type")
  @@index([balanceType], map: "idx_transaction_balance_type")
  @@index([createdAt], map: "idx_transaction_created_at")
  @@index([userId, transactionType], map: "idx_transaction_user_type")
  @@map("wallet_transactions")
}

// ============================================
// 登录与认证 - Authentication System
// ============================================

/// 用户登录日志表 - 记录所有登录行为 ✅已完成
model UserLoginLog {
  id        BigInt   @id @default(autoincrement()) @map("log_id")
  userId    BigInt   @map("user_id")
  loginTime BigInt   @map("login_time") /// 登录时间戳
  createdAt DateTime @default(now()) @map("created_at")

  // 登录方式
  loginType   Int     @map("login_type") @db.SmallInt /// 登录类型: 1-密码登录 2-短信验证码 3-第三方登录
  loginMethod String? @map("login_method") @db.VarChar(50) /// 登录方式: password/google/facebook

  // 登录信息
  loginIp     String? @map("login_ip") @db.VarChar(50) /// 登录IP
  loginDevice String? @map("login_device") @db.VarChar(100) /// 登录设备
  userAgent   String? @map("user_agent") @db.Text /// User-Agent
  deviceId    String? @map("device_id") @db.VarChar(100) /// 设备唯一ID

  // 位置信息
  countryCode String? @map("country_code") @db.VarChar(10) /// 国家代码
  city        String? @map("city") @db.VarChar(100) /// 城市

  // 登录状态
  loginStatus Int     @default(1) @map("login_status") @db.SmallInt /// 登录状态: 1-成功 2-失败
  failReason  String? @map("fail_reason") @db.VarChar(200) /// 失败原因

  // Token信息
  tokenIssued Int @default(1) @map("token_issued") @db.SmallInt /// 是否颁发Token: 0-否 1-是

  // 关系
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], map: "idx_login_log_user")
  @@index([loginTime], map: "idx_login_log_time")
  @@index([loginType], map: "idx_login_log_type")
  @@index([loginIp], map: "idx_login_log_ip")
  @@map("user_login_logs")
}

/// 第三方登录账户表 - 存储OAuth账户绑定信息 ✅已完成
model OauthAccount {
  id        BigInt   @id @default(autoincrement()) @map("oauth_id")
  userId    BigInt   @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // 第三方平台
  provider       String @map("provider") @db.VarChar(50) /// 第三方平台: google/facebook/apple
  providerUserId String @map("provider_user_id") @db.VarChar(255) /// 第三方用户ID

  // 第三方账户信息
  providerEmail    String? @map("provider_email") @db.VarChar(255) /// 第三方邮箱
  providerNickname String? @map("provider_nickname") @db.VarChar(100) /// 第三方昵称
  providerAvatar   String? @map("provider_avatar") @db.VarChar(255) /// 第三方头像

  // Token信息
  accessToken    String? @map("access_token") @db.Text /// 访问令牌
  refreshToken   String? @map("refresh_token") @db.Text /// 刷新令牌
  tokenExpiresAt BigInt? @map("token_expires_at") /// Token过期时间

  // 绑定状态
  bindStatus Int @default(1) @map("bind_status") @db.SmallInt /// 绑定状态: 0-已解绑 1-已绑定

  // 时间
  firstBindAt BigInt? @map("first_bind_at") /// 首次绑定时间戳
  lastLoginAt BigInt? @map("last_login_at") /// 最后登录时间戳

  // 关系
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerUserId], map: "uk_oauth_provider_user")
  @@index([userId], map: "idx_oauth_user")
  @@index([provider], map: "idx_oauth_provider")
  @@map("oauth_accounts")
}

/// 短信验证码表 - 存储短信验证码记录 ✅已完成
model SmsVerificationCode {
  id        BigInt   @id @default(autoincrement()) @map("code_id")
  createdAt DateTime @default(now()) @map("created_at")

  // 接收方
  phone       String @map("phone") @db.VarChar(20) /// 手机号
  countryCode String @default("63") @map("country_code") @db.VarChar(10) /// 国家代码

  // 验证码
  code     String @map("code") @db.VarChar(10) /// 验证码
  codeType Int    @map("code_type") @db.SmallInt /// 验证码类型: 1-注册 2-登录 3-修改密码 4-绑定手机 5-提现

  // 发送信息
  sendStatus   Int     @default(1) @map("send_status") @db.SmallInt /// 发送状态: 1-待发送 2-已发送 3-发送失败
  sendResult   String? @map("send_result") @db.Text /// 发送结果
  smsProvider  String? @map("sms_provider") @db.VarChar(50) /// 短信服务商
  smsMessageId String? @map("sms_message_id") @db.VarChar(100) /// 短信消息ID

  // 验证状态
  verifyStatus    Int     @default(0) @map("verify_status") @db.SmallInt /// 验证状态: 0-未验证 1-已验证 2-已过期
  verifyTimes     Int     @default(0) @map("verify_times") /// 验证次数
  maxVerifyTimes  Int     @default(5) @map("max_verify_times") /// 最大验证次数

  // 有效期
  expiresAt  BigInt  @map("expires_at") /// 过期时间戳（通常5分钟）
  verifiedAt BigInt? @map("verified_at") /// 验证时间戳

  // IP限制
  requestIp String? @map("request_ip") @db.VarChar(50) /// 请求IP

  @@index([phone], map: "idx_sms_phone")
  @@index([codeType], map: "idx_sms_code_type")
  @@index([verifyStatus], map: "idx_sms_verify_status")
  @@index([expiresAt], map: "idx_sms_expires_at")
  @@index([createdAt], map: "idx_sms_created_at")
  @@map("sms_verification_codes")
}

// ============================================
// KYC认证 - KYC System
// ============================================

/// KYC认证记录表 - 存储用户身份认证信息
model KycRecord {
  id        BigInt   @id @default(autoincrement()) @map("id")
  userId    BigInt   @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // 认证状态
  kycStatus Int @default(0) @map("kyc_status") @db.SmallInt /// 认证状态: 0-未提交 1-审核中 2-审核失败 3-待补充 4-已通过

  // 身份证件
  idCardFront String? @map("id_card_front") @db.VarChar(255) /// 身份证正面URL
  idCardBack  String? @map("id_card_back") @db.VarChar(255) /// 身份证背面URL
  faceImage   String? @map("face_image") @db.VarChar(255) /// 人脸照片URL

  // 活体检测
  livenessToken String? @map("liveness_token") @db.Text /// 活体检测token
  ocrResult     Json?   @map("ocr_result") /// OCR识别结果（JSON格式）

  // 审核结果
  auditResult    String? @map("audit_result") @db.Text /// 审核结果说明
  rejectedReason String? @map("rejected_reason") @db.VarChar(255) /// 拒绝原因

  // 时间
  submittedAt BigInt? @map("submitted_at") /// 提交时间戳
  auditedAt   BigInt? @map("audited_at") /// 审核时间戳

  // 关系
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, kycStatus], map: "idx_kyc_user_status")
  @@index([submittedAt], map: "idx_kyc_submitted_at")
  @@map("kyc_records")
}

/// KYC证件类型表 - 支持的证件类型配置
model KycIdType {
  id        Int      @id @map("type_id") /// 证件类型ID
  createdAt DateTime @default(now()) @map("created_at")

  // 类型信息
  typeName   String  @map("type_name") @db.VarChar(200) /// 证件类型名称
  typeNameEn String? @map("type_name_en") @db.VarChar(200) /// 英文名称

  // 验证规则
  requiresFront Boolean @default(true) @map("requires_front") /// 是否需要正面照
  requiresBack  Boolean @default(true) @map("requires_back") /// 是否需要反面照
  requiresOcr   Boolean @default(true) @map("requires_ocr") /// 是否需要OCR识别

  // 排序
  sortOrder Int @default(0) @map("sort_order") /// 排序值

  // 状态
  status Int @default(1) @map("status") @db.SmallInt /// 状态: 0-禁用 1-启用

  @@index([status], map: "idx_kyc_id_type_status")
  @@map("kyc_id_types")
}

/// KYC职业类型表 - 职业选项配置
model KycOccupationType {
  id        Int      @id @map("occupation_id") /// 职业ID
  createdAt DateTime @default(now()) @map("created_at")

  // 职业信息
  occupationName     String  @map("occupation_name") @db.VarChar(200) /// 职业名称
  occupationCategory String? @map("occupation_category") @db.VarChar(50) /// 职业分类

  // 排序
  sortOrder Int @default(0) @map("sort_order") /// 排序值

  // 状态
  status Int @default(1) @map("status") @db.SmallInt /// 状态: 0-禁用 1-启用

  @@index([status], map: "idx_kyc_occupation_status")
  @@index([occupationCategory], map: "idx_kyc_occupation_category")
  @@map("kyc_occupation_types")
}

// ============================================
// 地址管理 - Address System
// ============================================

/// 用户地址表 - 存储收货地址信息
model UserAddress {
  id        BigInt   @id @default(autoincrement()) @map("address_id")
  userId    BigInt   @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // 收货人信息
  firstName  String  @map("first_name") @db.VarChar(50) /// 名
  middleName String? @map("middle_name") @db.VarChar(50) /// 中间名
  lastName   String  @map("last_name") @db.VarChar(50) /// 姓
  phone      String  @map("phone") @db.VarChar(20) /// 联系电话

  // 地址信息
  province    String  @map("province") @db.VarChar(50) /// 省份
  city        String  @map("city") @db.VarChar(50) /// 城市
  fullAddress String  @map("full_address") @db.Text /// 详细地址
  postalCode  String? @map("postal_code") @db.VarChar(10) /// 邮政编码

  // 默认地址
  isDefault Boolean @default(false) @map("is_default") /// 是否默认地址

  // 关系
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], map: "idx_address_user")
  @@index([userId, isDefault], map: "idx_address_user_default")
  @@map("user_addresses")
}

/// 省份配置表 - 菲律宾省份列表
model Province {
  id        Int      @id @default(autoincrement()) @map("province_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  provinceName String  @map("province_name") @db.VarChar(100) /// 省份名称
  provinceCode String? @map("province_code") @db.VarChar(50) /// 省份代码

  // 排序
  sortOrder Int @default(0) @map("sort_order") /// 排序值

  // 状态
  status Int @default(1) @map("status") @db.SmallInt /// 状态: 0-禁用 1-启用

  // 关系
  cities City[] /// 城市列表（1对多）

  @@index([status], map: "idx_province_status")
  @@index([provinceName], map: "idx_province_name")
  @@map("provinces")
}

/// 城市配置表 - 城市列表
model City {
  id         Int      @id @default(autoincrement()) @map("city_id")
  provinceId Int      @map("province_id")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  cityName   String  @map("city_name") @db.VarChar(100) /// 城市名称
  cityCode   String? @map("city_code") @db.VarChar(50) /// 城市代码
  postalCode String? @map("postal_code") @db.VarChar(10) /// 邮政编码

  // 排序
  sortOrder Int @default(0) @map("sort_order") /// 排序值

  // 状态
  status Int @default(1) @map("status") @db.SmallInt /// 状态: 0-禁用 1-启用

  // 关系
  province Province @relation(fields: [provinceId], references: [id], onDelete: Cascade)

  @@index([provinceId], map: "idx_city_province")
  @@index([status], map: "idx_city_status")
  @@index([cityName], map: "idx_city_name")
  @@map("cities")
}

// ============================================
// 邀请关系 - Invitation System
// ============================================

/// 邀请好友关系表 - 记录用户邀请关系
model UserInvitation {
  id        BigInt   @id @default(autoincrement()) @map("id")
  inviterId BigInt   @map("inviter_id") /// 邀请人用户ID
  inviteeId BigInt   @map("invitee_id") /// 被邀请人用户ID
  createdAt DateTime @default(now()) @map("created_at")

  // 被邀请人信息
  inviteeNickname String? @map("invitee_nickname") @db.VarChar(100) /// 被邀请人昵称
  inviteeAvatar   String? @map("invitee_avatar") @db.VarChar(255) /// 被邀请人头像

  // 状态
  status Int @default(1) @map("status") @db.SmallInt /// 状态: 1-已注册 2-已完成首充

  // 奖励
  inviteeFirstReceiveCoin Decimal @default(0) @map("invitee_first_receive_coin") @db.Decimal(10, 2) /// 被邀请人首次获得金币
  couponAmount            Decimal @default(0) @map("coupon_amount") @db.Decimal(10, 2) /// 邀请人获得优惠券金额

  // 时间
  inviteeRegisteredAt BigInt? @map("invitee_registered_at") /// 被邀请人注册时间戳

  // 关系
  inviter User @relation("Inviter", fields: [inviterId], references: [id], onDelete: Cascade)
  invitee User @relation("Invitee", fields: [inviteeId], references: [id], onDelete: Cascade)

  @@unique([inviterId, inviteeId], map: "uk_invitation_inviter_invitee")
  @@index([inviterId], map: "idx_invitation_inviter")
  @@index([inviteeId], map: "idx_invitation_invitee")
  @@index([status], map: "idx_invitation_status")
  @@map("user_invitations")
}

// ============================================
// 订单系统 - Order System
// ============================================

/// 订单表 - 记录用户购买订单
model Order {
  id        BigInt   @id @default(autoincrement()) @map("order_id")
  orderNo   String   @unique @map("order_no") @db.VarChar(50) /// 订单号
  userId    BigInt   @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // 商品信息
  treasureId   BigInt  @map("treasure_id") /// 宝藏ID（商品ID）
  treasureName String  @map("treasure_name") @db.VarChar(200) /// 宝藏名称
  treasureImage String? @map("treasure_image") @db.VarChar(255) /// 商品图片

  // 数量与金额
  quantity    Int     @map("quantity") /// 购买数量
  unitPrice   Decimal @map("unit_price") @db.Decimal(10, 2) /// 单价
  totalAmount Decimal @map("total_amount") @db.Decimal(10, 2) /// 订单总额
  discountAmount Decimal @default(0) @map("discount_amount") @db.Decimal(10, 2) /// 优惠金额
  finalAmount Decimal @map("final_amount") @db.Decimal(10, 2) /// 实付金额

  // 优惠券
  couponId     BigInt? @map("coupon_id") /// 使用的优惠券ID
  couponAmount Decimal @default(0) @map("coupon_amount") @db.Decimal(10, 2) /// 优惠券抵扣金额

  // 幸运码范围
  luckyCodeStart String? @map("lucky_code_start") @db.VarChar(50) /// 起始幸运码
  luckyCodeEnd   String? @map("lucky_code_end") @db.VarChar(50) /// 结束幸运码
  luckyCodeCount Int     @default(0) @map("lucky_code_count") /// 幸运码数量

  // 订单状态
  orderStatus Int @default(1) @map("order_status") @db.SmallInt /// 订单状态: 1-待支付 2-支付中 3-已支付 4-已取消 5-已退款
  payStatus   Int @default(0) @map("pay_status") @db.SmallInt /// 支付状态: 0-未支付 1-已支付 2-支付失败

  // 支付信息
  paymentMethod String? @map("payment_method") @db.VarChar(50) /// 支付方式: gcash/paymaya/qrph
  paymentNo     String? @map("payment_no") @db.VarChar(100) /// 支付流水号
  paidAt        BigInt? @map("paid_at") /// 支付时间戳

  // 取消/退款
  cancelReason String? @map("cancel_reason") @db.VarChar(500) /// 取消原因
  canceledAt   BigInt? @map("canceled_at") /// 取消时间戳
  refundAmount Decimal @default(0) @map("refund_amount") @db.Decimal(10, 2) /// 退款金额
  refundedAt   BigInt? @map("refunded_at") /// 退款时间戳

  // 开奖信息
  drawStatus Int @default(0) @map("draw_status") @db.SmallInt /// 开奖状态: 0-未开奖 1-未中奖 2-已中奖
  drawnAt    BigInt? @map("drawn_at") /// 开奖时间戳

  // 备注
  remark String? @map("remark") @db.Text /// 备注

  // 关系
  user           User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  winningRecords WinningRecord[] /// 中奖记录（1对多）

  @@index([userId], map: "idx_order_user")
  @@index([orderNo], map: "idx_order_no")
  @@index([orderStatus], map: "idx_order_status")
  @@index([payStatus], map: "idx_order_pay_status")
  @@index([drawStatus], map: "idx_order_draw_status")
  @@index([createdAt], map: "idx_order_created_at")
  @@index([treasureId], map: "idx_order_treasure")
  @@map("orders")
}

/// 中奖记录表 - 记录用户中奖信息
model WinningRecord {
  id        BigInt   @id @default(autoincrement()) @map("winning_id")
  userId    BigInt   @map("user_id")
  orderId   BigInt   @map("order_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // 中奖商品
  treasureId   BigInt  @map("treasure_id") /// 宝藏ID
  treasureName String  @map("treasure_name") @db.VarChar(200) /// 宝藏名称
  treasureImage String? @map("treasure_image") @db.VarChar(255) /// 商品图片
  prizeValue   Decimal @map("prize_value") @db.Decimal(10, 2) /// 奖品价值

  // 幸运码
  winningLuckyCode String @map("winning_lucky_code") @db.VarChar(50) /// 中奖幸运码
  drawNumber       String @map("draw_number") @db.VarChar(100) /// 开奖号码

  // 中奖时间
  winningTime BigInt @map("winning_time") /// 中奖时间戳
  drawnAt     BigInt @map("drawn_at") /// 开奖时间戳

  // 中奖状态
  winningStatus Int @default(1) @map("winning_status") @db.SmallInt /// 中奖状态: 1-待确认 2-已确认 3-配送中 4-已完成 5-已取消
  confirmStatus Int @default(0) @map("confirm_status") @db.SmallInt /// 确认状态: 0-未确认 1-已确认
  confirmedAt   BigInt? @map("confirmed_at") /// 确认时间戳

  // 奖品类型
  prizeType Int @map("prize_type") @db.SmallInt /// 奖品类型: 1-实物商品 2-现金 3-金币 4-优惠券

  // 发货信息（实物商品）
  deliveryStatus  Int     @default(0) @map("delivery_status") @db.SmallInt /// 配送状态: 0-未配送 1-待发货 2-已发货 3-配送中 4-已签收
  deliveryAddress String? @map("delivery_address") @db.Text /// 收货地址
  trackingNo      String? @map("tracking_no") @db.VarChar(100) /// 物流单号
  deliveredAt     BigInt? @map("delivered_at") /// 签收时间戳

  // 兑现信息（现金/金币）
  cashOutStatus Int     @default(0) @map("cash_out_status") @db.SmallInt /// 兑现状态: 0-未兑现 1-已兑现
  cashOutAmount Decimal @default(0) @map("cash_out_amount") @db.Decimal(10, 2) /// 兑现金额
  cashedOutAt   BigInt? @map("cashed_out_at") /// 兑现时间戳

  // 展示设置
  displayInWall Boolean @default(true) @map("display_in_wall") /// 是否在中奖墙展示
  displayOrder  Int     @default(0) @map("display_order") /// 展示顺序

  // 备注
  remark String? @map("remark") @db.Text /// 备注

  // 关系
  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  order Order @relation(fields: [orderId], references: [id], onDelete: Cascade)

  @@index([userId], map: "idx_winning_user")
  @@index([orderId], map: "idx_winning_order")
  @@index([treasureId], map: "idx_winning_treasure")
  @@index([winningStatus], map: "idx_winning_status")
  @@index([winningTime], map: "idx_winning_time")
  @@index([deliveryStatus], map: "idx_winning_delivery_status")
  @@index([displayInWall], map: "idx_winning_display")
  @@map("winning_records")
}

/// 用户优惠券表 - 记录用户拥有的优惠券
model UserCoupon {
  id        BigInt   @id @default(autoincrement()) @map("user_coupon_id")
  userId    BigInt   @map("user_id")
  couponId  BigInt   @map("coupon_id") /// 优惠券模板ID
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // 优惠券信息
  couponName   String  @map("coupon_name") @db.VarChar(200) /// 优惠券名称
  couponType   Int     @map("coupon_type") @db.SmallInt /// 优惠券类型: 1-满减券 2-折扣券 3-代金券
  couponAmount Decimal @map("coupon_amount") @db.Decimal(10, 2) /// 优惠金额/折扣
  minAmount    Decimal @default(0) @map("min_amount") @db.Decimal(10, 2) /// 最低消费金额
  maxDiscount  Decimal @default(0) @map("max_discount") @db.Decimal(10, 2) /// 最大优惠金额（折扣券用）

  // 适用范围
  applicableType  Int     @default(0) @map("applicable_type") @db.SmallInt /// 适用类型: 0-全场通用 1-指定商品 2-指定分类
  applicableIds   String? @map("applicable_ids") @db.Text /// 适用ID列表（JSON数组）

  // 来源
  sourceType Int     @default(1) @map("source_type") @db.SmallInt /// 来源类型: 1-系统发放 2-活动获得 3-邀请奖励 4-购买获得
  sourceId   BigInt? @map("source_id") /// 来源ID

  // 使用状态
  useStatus Int     @default(0) @map("use_status") @db.SmallInt /// 使用状态: 0-未使用 1-已使用 2-已过期 3-已失效
  usedAt    BigInt? @map("used_at") /// 使用时间戳
  orderId   BigInt? @map("order_id") /// 使用的订单ID

  // 有效期
  validFrom BigInt @map("valid_from") /// 生效时间戳
  validTo   BigInt @map("valid_to") /// 失效时间戳

  // 关系
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], map: "idx_user_coupon_user")
  @@index([couponId], map: "idx_user_coupon_coupon")
  @@index([useStatus], map: "idx_user_coupon_use_status")
  @@index([validFrom, validTo], map: "idx_user_coupon_valid_period")
  @@index([userId, useStatus], map: "idx_user_coupon_user_status")
  @@map("user_coupons")
}

// ============================================
// 充值提现系统 - Recharge & Withdraw System
// ============================================

/// 充值订单表 - 记录用户充值订单
model RechargeOrder {
  id        BigInt   @id @default(autoincrement()) @map("recharge_id")
  orderNo   String   @unique @map("order_no") @db.VarChar(50) /// 充值订单号
  userId    BigInt   @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // 充值金额
  rechargeAmount Decimal @map("recharge_amount") @db.Decimal(10, 2) /// 充值金额
  bonusAmount    Decimal @default(0) @map("bonus_amount") @db.Decimal(10, 2) /// 赠送金额
  actualAmount   Decimal @map("actual_amount") @db.Decimal(10, 2) /// 实际到账金额
  coinAmount     Decimal @default(0) @map("coin_amount") @db.Decimal(10, 2) /// 赠送金币

  // 充值渠道
  channelId     BigInt  @map("channel_id") /// 充值渠道ID
  channelName   String  @map("channel_name") @db.VarChar(100) /// 渠道名称
  channelCode   String  @map("channel_code") @db.VarChar(50) /// 渠道代码: gcash/paymaya/qrph/bank
  paymentType   String? @map("payment_type") @db.VarChar(50) /// 支付类型

  // 充值套餐
  optionId      BigInt? @map("option_id") /// 充值套餐ID
  optionName    String? @map("option_name") @db.VarChar(200) /// 套餐名称

  // 支付信息
  paymentNo       String? @map("payment_no") @db.VarChar(100) /// 第三方支付单号
  paymentUrl      String? @map("payment_url") @db.Text /// 支付链接
  paymentQrCode   String? @map("payment_qr_code") @db.Text /// 支付二维码
  transactionId   String? @map("transaction_id") @db.VarChar(100) /// 交易流水号

  // 订单状态
  orderStatus Int @default(1) @map("order_status") @db.SmallInt /// 订单状态: 1-待支付 2-支付中 3-支付成功 4-支付失败 5-已取消 6-已过期
  payStatus   Int @default(0) @map("pay_status") @db.SmallInt /// 支付状态: 0-未支付 1-已支付 2-支付失败

  // 时间
  paidAt     BigInt? @map("paid_at") /// 支付成功时间戳
  expiredAt  BigInt? @map("expired_at") /// 订单过期时间戳
  canceledAt BigInt? @map("canceled_at") /// 取消时间戳

  // 回调信息
  callbackStatus Int     @default(0) @map("callback_status") @db.SmallInt /// 回调状态: 0-未回调 1-已回调
  callbackTime   BigInt? @map("callback_time") /// 回调时间戳
  callbackData   Json?   @map("callback_data") /// 回调数据

  // IP信息
  requestIp String? @map("request_ip") @db.VarChar(50) /// 请求IP

  // 备注
  remark String? @map("remark") @db.Text /// 备注

  // 关系
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], map: "idx_recharge_user")
  @@index([orderNo], map: "idx_recharge_order_no")
  @@index([orderStatus], map: "idx_recharge_status")
  @@index([payStatus], map: "idx_recharge_pay_status")
  @@index([channelCode], map: "idx_recharge_channel")
  @@index([createdAt], map: "idx_recharge_created_at")
  @@map("recharge_orders")
}

/// 提现订单表 - 记录用户提现申请
model WithdrawOrder {
  id        BigInt   @id @default(autoincrement()) @map("withdraw_id")
  orderNo   String   @unique @map("order_no") @db.VarChar(50) /// 提现订单号
  userId    BigInt   @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // 提现金额
  withdrawAmount Decimal @map("withdraw_amount") @db.Decimal(10, 2) /// 提现金额
  feeAmount      Decimal @default(0) @map("fee_amount") @db.Decimal(10, 2) /// 手续费
  actualAmount   Decimal @map("actual_amount") @db.Decimal(10, 2) /// 实际到账金额

  // 提现方式
  withdrawType   Int    @map("withdraw_type") @db.SmallInt /// 提现方式: 1-银行卡 2-GCash 3-PayMaya 4-其他
  withdrawMethod String @map("withdraw_method") @db.VarChar(50) /// 提现方式代码

  // 收款账户
  bankCardId    BigInt? @map("bank_card_id") /// 银行卡ID
  accountName   String  @map("account_name") @db.VarChar(100) /// 收款人姓名
  accountNumber String  @map("account_number") @db.VarChar(100) /// 账号/卡号
  bankName      String? @map("bank_name") @db.VarChar(100) /// 银行名称
  bankBranch    String? @map("bank_branch") @db.VarChar(100) /// 开户行/支行

  // 订单状态
  withdrawStatus Int @default(1) @map("withdraw_status") @db.SmallInt /// 提现状态: 1-待审核 2-审核中 3-审核通过 4-处理中 5-已完成 6-审核拒绝 7-已取消

  // 审核信息
  auditStatus   Int     @default(0) @map("audit_status") @db.SmallInt /// 审核状态: 0-待审核 1-审核通过 2-审核拒绝
  auditUserId   BigInt? @map("audit_user_id") /// 审核人ID
  auditRemark   String? @map("audit_remark") @db.Text /// 审核备注
  auditedAt     BigInt? @map("audited_at") /// 审核时间戳
  rejectReason  String? @map("reject_reason") @db.VarChar(500) /// 拒绝原因

  // 打款信息
  transferStatus Int     @default(0) @map("transfer_status") @db.SmallInt /// 打款状态: 0-未打款 1-打款中 2-已打款 3-打款失败
  transferNo     String? @map("transfer_no") @db.VarChar(100) /// 打款流水号
  transferedAt   BigInt? @map("transfered_at") /// 打款时间戳

  // 完成/取消
  completedAt BigInt? @map("completed_at") /// 完成时间戳
  canceledAt  BigInt? @map("canceled_at") /// 取消时间戳

  // 备注
  remark String? @map("remark") @db.Text /// 备注

  // 关系
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], map: "idx_withdraw_user")
  @@index([orderNo], map: "idx_withdraw_order_no")
  @@index([withdrawStatus], map: "idx_withdraw_status")
  @@index([auditStatus], map: "idx_withdraw_audit_status")
  @@index([transferStatus], map: "idx_withdraw_transfer_status")
  @@index([createdAt], map: "idx_withdraw_created_at")
  @@map("withdraw_orders")
}

/// 银行卡表 - 存储用户绑定的银行卡/电子钱包
model BankCard {
  id        BigInt   @id @default(autoincrement()) @map("card_id")
  userId    BigInt   @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // 账户类型
  accountType Int    @map("account_type") @db.SmallInt /// 账户类型: 1-银行卡 2-GCash 3-PayMaya 4-其他电子钱包
  accountName String @map("account_name") @db.VarChar(100) /// 持卡人/账户名

  // 卡号/账号
  cardNumber     String  @map("card_number") @db.VarChar(100) /// 卡号/账号
  cardNumberMd5  String  @map("card_number_md5") @db.VarChar(32) /// 卡号MD5
  maskedNumber   String  @map("masked_number") @db.VarChar(50) /// 脱敏卡号（如：**** 1234）

  // 银行信息（银行卡类型）
  bankName   String? @map("bank_name") @db.VarChar(100) /// 银行名称
  bankCode   String? @map("bank_code") @db.VarChar(50) /// 银行代码
  bankBranch String? @map("bank_branch") @db.VarChar(100) /// 开户行/支行

  // 绑定状态
  bindStatus Int @default(1) @map("bind_status") @db.SmallInt /// 绑定状态: 0-已解绑 1-已绑定

  // 默认卡
  isDefault Boolean @default(false) @map("is_default") /// 是否默认卡

  // 验证状态
  verifyStatus Int     @default(0) @map("verify_status") @db.SmallInt /// 验证状态: 0-未验证 1-已验证 2-验证失败
  verifiedAt   BigInt? @map("verified_at") /// 验证时间戳

  // 关系
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], map: "idx_bank_card_user")
  @@index([cardNumberMd5], map: "idx_bank_card_number_md5")
  @@index([bindStatus], map: "idx_bank_card_bind_status")
  @@index([userId, isDefault], map: "idx_bank_card_user_default")
  @@map("bank_cards")
}

/// 收款方式表 - 商家收款账户配置
model ReceivePaymentMethod {
  id        BigInt   @id @default(autoincrement()) @map("method_id")
  userId    BigInt?  @map("user_id") /// 所属用户ID（系统配置为NULL）
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // 收款方式
  paymentType Int    @map("payment_type") @db.SmallInt /// 收款方式: 1-银行卡 2-GCash 3-PayMaya 4-QRPH 5-其他
  paymentName String @map("payment_name") @db.VarChar(100) /// 收款方式名称

  // 收款账户
  accountName   String  @map("account_name") @db.VarChar(100) /// 收款人姓名
  accountNumber String  @map("account_number") @db.VarChar(100) /// 收款账号
  bankName      String? @map("bank_name") @db.VarChar(100) /// 银行名称
  bankBranch    String? @map("bank_branch") @db.VarChar(100) /// 支行

  // 收款二维码
  qrCodeUrl String? @map("qr_code_url") @db.VarChar(255) /// 收款二维码URL

  // 限额
  minAmount Decimal @default(0) @map("min_amount") @db.Decimal(10, 2) /// 最低金额
  maxAmount Decimal @default(0) @map("max_amount") @db.Decimal(10, 2) /// 最高金额

  // 状态
  status Int @default(1) @map("status") @db.SmallInt /// 状态: 0-禁用 1-启用

  // 排序
  sortOrder Int @default(0) @map("sort_order") /// 排序值

  // 关系
  user User? @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], map: "idx_receive_payment_user")
  @@index([paymentType], map: "idx_receive_payment_type")
  @@index([status], map: "idx_receive_payment_status")
  @@map("receive_payment_methods")
}

// ============================================
// 客服与工单系统 - Customer Service System
// ============================================

/// 客服会话表 - 记录客服对话会话
model CustomerServiceSession {
  id        BigInt   @id @default(autoincrement()) @map("session_id")
  userId    BigInt   @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // 会话信息
  sessionNo   String @unique @map("session_no") @db.VarChar(50) /// 会话编号
  sessionType Int    @map("session_type") @db.SmallInt /// 会话类型: 1-在线客服 2-工单系统

  // 客服人员
  csUserId   BigInt? @map("cs_user_id") /// 客服人员ID
  csNickname String? @map("cs_nickname") @db.VarChar(100) /// 客服昵称

  // 会话状态
  sessionStatus Int @default(1) @map("session_status") @db.SmallInt /// 会话状态: 1-进行中 2-已关闭 3-已超时

  // 问题分类
  category    String? @map("category") @db.VarChar(100) /// 问题分类
  subCategory String? @map("sub_category") @db.VarChar(100) /// 子分类

  // 消息统计
  messageCount   Int @default(0) @map("message_count") /// 消息数量
  userMsgCount   Int @default(0) @map("user_msg_count") /// 用户消息数
  csMsgCount     Int @default(0) @map("cs_msg_count") /// 客服消息数

  // 满意度
  satisfactionScore Int?    @default(0) @map("satisfaction_score") @db.SmallInt /// 满意度评分: 1-5
  satisfactionRemark String? @map("satisfaction_remark") @db.Text /// 满意度评价

  // 时间
  firstResponseAt BigInt? @map("first_response_at") /// 首次响应时间戳
  closedAt        BigInt? @map("closed_at") /// 关闭时间戳

  // 备注
  remark String? @map("remark") @db.Text /// 备注

  // 关系
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], map: "idx_cs_session_user")
  @@index([sessionNo], map: "idx_cs_session_no")
  @@index([sessionStatus], map: "idx_cs_session_status")
  @@index([csUserId], map: "idx_cs_session_cs_user")
  @@index([createdAt], map: "idx_cs_session_created_at")
  @@map("customer_service_sessions")
}

/// 工单表 - 用户工单记录
model WorkOrder {
  id        BigInt   @id @default(autoincrement()) @map("order_id")
  orderNo   String   @unique @map("order_no") @db.VarChar(50) /// 工单号
  userId    BigInt   @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // 工单类型
  orderType     Int    @map("order_type") @db.SmallInt /// 工单类型ID
  orderTypeName String @map("order_type_name") @db.VarChar(100) /// 工单类型名称

  // 工单标题与内容
  title       String @map("title") @db.VarChar(200) /// 工单标题
  description String @map("description") @db.Text /// 问题描述
  images      Json?  @map("images") /// 图片列表（JSON数组）

  // 工单状态
  orderStatus Int @default(1) @map("order_status") @db.SmallInt /// 工单状态: 1-待处理 2-处理中 3-待回复 4-已完成 5-已关闭 6-已取消

  // 优先级
  priority Int @default(2) @map("priority") @db.SmallInt /// 优先级: 1-紧急 2-普通 3-低

  // 处理人员
  handlerUserId   BigInt? @map("handler_user_id") /// 处理人ID
  handlerNickname String? @map("handler_nickname") @db.VarChar(100) /// 处理人昵称

  // 处理信息
  replyContent String? @map("reply_content") @db.Text /// 回复内容
  replyImages  Json?   @map("reply_images") /// 回复图片（JSON数组）

  // 时间
  firstReplyAt BigInt? @map("first_reply_at") /// 首次回复时间戳
  closedAt     BigInt? @map("closed_at") /// 关闭时间戳
  resolvedAt   BigInt? @map("resolved_at") /// 解决时间戳

  // 满意度
  satisfactionScore  Int?    @default(0) @map("satisfaction_score") @db.SmallInt /// 满意度评分: 1-5
  satisfactionRemark String? @map("satisfaction_remark") @db.Text /// 满意度评价

  // 备注
  remark String? @map("remark") @db.Text /// 备注

  // 关系
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], map: "idx_work_order_user")
  @@index([orderNo], map: "idx_work_order_no")
  @@index([orderType], map: "idx_work_order_type")
  @@index([orderStatus], map: "idx_work_order_status")
  @@index([priority], map: "idx_work_order_priority")
  @@index([handlerUserId], map: "idx_work_order_handler")
  @@index([createdAt], map: "idx_work_order_created_at")
  @@map("work_orders")
}

// ============================================
// 活动与通知系统 - Activity & Notification System
// ============================================

/// 用户活动记录表 - 记录用户参与的活动
model UserActivityRecord {
  id        BigInt   @id @default(autoincrement()) @map("record_id")
  userId    BigInt   @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // 活动信息
  activityId   BigInt @map("activity_id") /// 活动ID
  activityName String @map("activity_name") @db.VarChar(200) /// 活动名称
  activityType Int    @map("activity_type") @db.SmallInt /// 活动类型: 1-首充活动 2-签到活动 3-邀请活动 4-限时优惠 5-节日活动

  // 参与状态
  joinStatus Int @default(1) @map("join_status") @db.SmallInt /// 参与状态: 1-已参与 2-已完成 3-已领奖 4-已过期

  // 完成条件
  conditionType  Int     @map("condition_type") @db.SmallInt /// 条件类型: 1-充值金额 2-消费金额 3-邀请人数 4-签到天数
  targetValue    Decimal @default(0) @map("target_value") @db.Decimal(10, 2) /// 目标值
  currentValue   Decimal @default(0) @map("current_value") @db.Decimal(10, 2) /// 当前值
  completionRate Int     @default(0) @map("completion_rate") @db.SmallInt /// 完成率（百分比）

  // 奖励信息
  rewardType   Int     @default(0) @map("reward_type") @db.SmallInt /// 奖励类型: 1-现金 2-金币 3-优惠券 4-实物
  rewardAmount Decimal @default(0) @map("reward_amount") @db.Decimal(10, 2) /// 奖励金额/数量
  rewardStatus Int     @default(0) @map("reward_status") @db.SmallInt /// 领奖状态: 0-未领取 1-已领取
  rewardedAt   BigInt? @map("rewarded_at") /// 领奖时间戳

  // 时间
  joinedAt    BigInt  @map("joined_at") /// 参与时间戳
  completedAt BigInt? @map("completed_at") /// 完成时间戳
  expiredAt   BigInt? @map("expired_at") /// 过期时间戳

  // 备注
  remark String? @map("remark") @db.Text /// 备注

  // 关系
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], map: "idx_activity_record_user")
  @@index([activityId], map: "idx_activity_record_activity")
  @@index([activityType], map: "idx_activity_record_type")
  @@index([joinStatus], map: "idx_activity_record_status")
  @@index([rewardStatus], map: "idx_activity_record_reward_status")
  @@index([createdAt], map: "idx_activity_record_created_at")
  @@map("user_activity_records")
}

/// 用户通知记录表 - 存储用户接收的通知消息
model UserNotification {
  id        BigInt   @id @default(autoincrement()) @map("notification_id")
  userId    BigInt   @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // 通知类型
  notificationType Int    @map("notification_type") @db.SmallInt /// 通知类型: 1-系统通知 2-订单通知 3-中奖通知 4-充值通知 5-提现通知 6-活动通知 7-客服通知
  notificationCode String @map("notification_code") @db.VarChar(50) /// 通知代码

  // 通知内容
  title   String @map("title") @db.VarChar(200) /// 通知标题
  content String @map("content") @db.Text /// 通知内容
  summary String? @map("summary") @db.VarChar(500) /// 内容摘要

  // 图片与链接
  imageUrl String? @map("image_url") @db.VarChar(255) /// 图片URL
  linkUrl  String? @map("link_url") @db.VarChar(500) /// 跳转链接

  // 关联业务
  relatedType String? @map("related_type") @db.VarChar(50) /// 关联业务类型: order/recharge/withdraw/winning
  relatedId   BigInt? @map("related_id") /// 关联业务ID

  // 阅读状态
  readStatus Int     @default(0) @map("read_status") @db.SmallInt /// 阅读状态: 0-未读 1-已读
  readAt     BigInt? @map("read_at") /// 阅读时间戳

  // 推送状态
  pushStatus Int     @default(0) @map("push_status") @db.SmallInt /// 推送状态: 0-未推送 1-已推送 2-推送失败
  pushedAt   BigInt? @map("pushed_at") /// 推送时间戳

  // 过期时间
  expiredAt BigInt? @map("expired_at") /// 过期时间戳

  // 优先级
  priority Int @default(2) @map("priority") @db.SmallInt /// 优先级: 1-高 2-普通 3-低

  // 关系
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], map: "idx_notification_user")
  @@index([notificationType], map: "idx_notification_type")
  @@index([readStatus], map: "idx_notification_read_status")
  @@index([userId, readStatus], map: "idx_notification_user_read")
  @@index([createdAt], map: "idx_notification_created_at")
  @@map("user_notifications")
}

/// 签到记录表 - 记录用户每日签到
model SignInRecord {
  id        BigInt   @id @default(autoincrement()) @map("sign_in_id")
  userId    BigInt   @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")

  // 签到日期
  signInDate String @map("sign_in_date") @db.VarChar(10) /// 签到日期（YYYY-MM-DD）
  signInTime BigInt @map("sign_in_time") /// 签到时间戳

  // 连续签到
  continuousDays Int @default(1) @map("continuous_days") /// 连续签到天数
  totalDays      Int @default(1) @map("total_days") /// 累计签到天数

  // 奖励
  rewardType   Int     @default(0) @map("reward_type") @db.SmallInt /// 奖励类型: 1-金币 2-优惠券 3-积分
  rewardAmount Decimal @default(0) @map("reward_amount") @db.Decimal(10, 2) /// 奖励金额/数量
  rewardStatus Int     @default(0) @map("reward_status") @db.SmallInt /// 领奖状态: 0-未领取 1-已领取

  // 额外奖励（连续签到）
  bonusReward       Decimal @default(0) @map("bonus_reward") @db.Decimal(10, 2) /// 额外奖励
  isContinuousBonus Boolean @default(false) @map("is_continuous_bonus") /// 是否连续签到奖励

  // IP信息
  signInIp String? @map("sign_in_ip") @db.VarChar(50) /// 签到IP

  // 关系
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, signInDate], map: "uk_sign_in_user_date")
  @@index([userId], map: "idx_sign_in_user")
  @@index([signInDate], map: "idx_sign_in_date")
  @@index([continuousDays], map: "idx_sign_in_continuous")
  @@map("sign_in_records")
}
